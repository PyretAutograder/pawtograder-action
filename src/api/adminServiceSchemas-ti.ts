/**
 * This module was automatically generated by `ts-interface-builder`
 */
import * as t from 'ts-interface-checker'
// tslint:disable:object-literal-key-quotes

export const Calendar = t.iface([], {
  ics: 'string'
})

export const Grades = t.iface([], {
  html_url: 'string',
  current_grade: t.union('any', 'null'),
  current_score: 'number',
  final_grade: t.union('any', 'null'),
  final_score: 'number',
  unposted_current_score: 'number',
  unposted_current_grade: t.union('any', 'null'),
  unposted_final_score: 'number',
  unposted_final_grade: t.union('any', 'null')
})

export const User = t.iface([], {
  id: 'number',
  name: 'string',
  created_at: 'string',
  sortable_name: 'string',
  short_name: 'string',
  sis_user_id: 'string',
  integration_id: t.union('any', 'null'),
  login_id: 'string'
})

export const Enrollment = t.iface([], {
  id: 'number',
  user_id: 'number',
  course_id: 'number',
  type: 'string',
  created_at: 'string',
  updated_at: 'string',
  associated_user_id: t.union('any', 'null'),
  start_at: t.union('any', 'null'),
  end_at: t.union('any', 'null'),
  course_section_id: 'number',
  root_account_id: 'number',
  limit_privileges_to_course_section: 'boolean',
  enrollment_state: 'string',
  role: 'string',
  role_id: 'number',
  last_activity_at: 'string',
  last_attended_at: t.union('any', 'null'),
  total_activity_time: 'number',
  grades: 'Grades',
  sis_account_id: 'string',
  sis_course_id: 'string',
  course_integration_id: t.union('any', 'null'),
  sis_section_id: 'string',
  section_integration_id: t.union('any', 'null'),
  sis_user_id: 'string',
  html_url: 'string',
  user: 'User'
})

export const Course = t.iface([], {
  id: 'number',
  name: 'string',
  account_id: 'number',
  uuid: 'string',
  start_at: t.union('any', 'null'),
  grading_standard_id: t.union('any', 'null'),
  is_public: 'boolean',
  created_at: 'string',
  course_code: 'string',
  default_view: 'string',
  root_account_id: 'number',
  enrollment_term_id: 'number',
  license: 'string',
  grade_passback_setting: t.union('any', 'null'),
  end_at: 'string',
  public_syllabus: 'boolean',
  public_syllabus_to_auth: 'boolean',
  storage_quota_mb: 'number',
  is_public_to_auth_users: 'boolean',
  homeroom_course: 'boolean',
  course_color: t.union('any', 'null'),
  friendly_name: t.union('any', 'null'),
  apply_assignment_group_weights: 'boolean',
  calendar: 'Calendar',
  time_zone: 'string',
  blueprint: 'boolean',
  template: 'boolean',
  sis_course_id: t.union('any', 'null'),
  integration_id: t.union('any', 'null'),
  enrollments: t.array('Enrollment'),
  hide_final_grades: 'boolean',
  workflow_state: 'string',
  restrict_enrollments_to_course_dates: 'boolean'
})

export const SubmissionResponse = t.iface([], {
  grader_url: 'string'
})

export const GradeResponse = t.iface([], {
  message: 'string',
  is_ok: 'boolean'
})

export const OutputFormat = t.lit('text')

export const OutputVisibility = t.union(
  t.lit('hidden'),
  t.lit('visible'),
  t.lit('after_due_date'),
  t.lit('after_published')
)

export const AutograderFeedback = t.iface([], {
  tests: t.array(
    t.iface([], {
      extra_data: t.opt(
        t.iface([], {
          [t.indexKey]: 'string'
        })
      ),
      visibility: t.opt('OutputVisibility'),
      tags: t.opt(t.array('string')),
      output_format: t.opt('OutputFormat'),
      output: 'string',
      name_format: t.opt('OutputFormat'),
      name: 'string',
      status: t.opt(t.union(t.lit('pass'), t.lit('fail'))),
      max_score: t.opt('number'),
      score: t.opt('number')
    })
  ),
  output: t.iface([], {
    hidden: t.opt(
      t.iface([], {
        output_format: t.opt(t.lit('text')),
        output: 'string'
      })
    ),
    visible: t.opt(
      t.iface([], {
        output_format: t.opt(t.lit('text')),
        output: 'string'
      })
    ),
    after_due_date: t.opt(
      t.iface([], {
        output_format: t.opt(t.lit('text')),
        output: 'string'
      })
    ),
    after_published: t.opt(
      t.iface([], {
        output_format: t.opt(t.lit('text')),
        output: 'string'
      })
    )
  }),
  execution_time: 'number',
  score: t.opt('number')
})

const exportedTypeSuite: t.ITypeSuite = {
  Calendar,
  Grades,
  User,
  Enrollment,
  Course,
  SubmissionResponse,
  GradeResponse,
  OutputFormat,
  OutputVisibility,
  AutograderFeedback
}
export default exportedTypeSuite
